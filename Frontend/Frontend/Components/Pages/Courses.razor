@page "/courses"
@using Frontend.Model
﻿@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http

<h3>Courses</h3>

@code {
    private List<Course>? courses;

    protected override async Task OnInitializedAsync()
    {
        var query = new GraphQLQuery
            {
                Query = @"
        query {
            getCourses {
                id
                imageUri
                isBestseller
                title
                authors {
                    name
                }
                prices {
                    currency
                    price
                    discount
                }
                starRating
                reviews
                likesInProcent
                likes
                hours
            }
        }"
            };

        var response = await Http.PostAsJsonAsync("http://localhost:7245/graphql", query);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<DynamicGraphQLResponse>();
            if (result?.Data.TryGetProperty("getCourses", out var coursesJson) == true)
            {
                courses = coursesJson.EnumerateArray()
                    .Select(course => new Course
                        {
                            Id = course.GetProperty("id").GetString()!,
                            IsBestseller = course.GetProperty("isBestseller").GetBoolean(),
                            ImageUri = course.GetProperty("imageUri").GetString(),
                            Title = course.GetProperty("title").GetString(),
                            Authors = course.GetProperty("authors").EnumerateArray()
                                    .Select(author => new Author
                                    {
                                        Name = author.GetProperty("name").GetString()!,
                                    }).ToList(),
                            Prices = new Prices
                            {
                                Currency = course.GetProperty("prices").GetProperty("currency").GetString(),
                                Price = course.GetProperty("prices").GetProperty("price").GetDecimal(),
                                Discount = course.GetProperty("prices").GetProperty("discount").GetDecimal()
                            },
                            StarRating = course.GetProperty("starRating").GetDecimal(),
                            Reviews = course.GetProperty("reviews").GetString(),
                            LikesInProcent = course.GetProperty("likesInProcent").GetString(),
                            Likes = course.GetProperty("likes").GetString(),
                            Hours = course.GetProperty("hours").GetString()
                        }).ToList();
            }
        }
    }
}
